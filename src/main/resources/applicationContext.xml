<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
        <context:component-scan base-package="com.atguigu"></context:component-scan>
        <!--引用外部属性文件-->
        <!--数据库连接池作为单实例是最好的；一个项目就一个连接池，连接池里面管理很多连接
            连接是直接在池子中拿
        -->
        <!--可以让spring帮我们创建连接池对象（管理连接池）-->
        <!--加载外部配置文件
                固定写法classpath：表示引用类路径下的一个资源
        -->
        <context:property-placeholder location="classpath:dbConfig.properties" />
        <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
                <!--username是Spring key中的一个关键字-->
                <property name="user" value="${jdbc.username}"></property>
                <property name="password" value="${jdbc.password}"></property>
                <property name="jdbcUrl" value="${jdbc.jdbcUrl}" />
                <property name="driverClass" value="${jdbc.driverClass}" />
        </bean>
        <bean class="org.springframework.jdbc.core.JdbcTemplate">
                <constructor-arg name="dataSource" ref="dataSource"></constructor-arg>
        </bean>
        <!--    事务控制    -->
        <!--1：配置事务管理器让其进行事务控制-->
        <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
                <!--控制事务都是要拿连接做操作 -->
                <!--
                使用连接设置非自动提交
                使用连接进行提交
                使用连接回滚
                -->
                <!--
                jdbc操作数据库都是从数据源获取连接
                所以要控制住数据源-->
                <property name="dataSource" ref="dataSource"></property>
        </bean>
        <!--2.开启基于注解的事务控制模式（依赖tx名称空间）-->
        <tx:annotation-driven transaction-manager="transactionManager"/>
        <!--3.给事务方法加注解-->
</beans>